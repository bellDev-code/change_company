# 문자열 밀기

# 문제설명
# 문자열 "hello"에서 각 문자를 오른쪽으로 한 칸씩 밀고 마지막 문자는 맨 앞으로 이동시키면 "ohell"이 됩니다. 
# 이것을 문자열을 민다고 정의한다면 문자열 A와 B가 매개변수로 주어질 때, 
# A를 밀어서 B가 될 수 있다면 밀어야 하는 최소 횟수를 return하고 
# 밀어서 B가 될 수 없으면 -1을 return 하도록 solution 함수를 완성해보세요.

# 입출력 예
# "hello"	"ohell"	1
# "apple"	"elppa"	-1
# "atat"	"tata"	1
# "abc"	    "abc"	0

# 입출력 예 #1
# "hello"를 오른쪽으로 한 칸 밀면 "ohell"가 됩니다.

# 입출력 예 #2
# "apple"은 몇 번을 밀어도 "elppa"가 될 수 없습니다.

# 입출력 예 #3
# "atat"는 오른쪽으로 한 칸, 세 칸을 밀면 "tata"가 되므로 최소 횟수인 1을 반환합니다.

# 입출력 예 #4
# "abc"는 밀지 않아도 "abc"이므로 0을 반환합니다.

def solution(A, B):
    for new_str in range(len(A)):
        if A == B:
            return new_str
        
        A = A[-1] + A[:-1]
        
    return -1

# 28번 줄 : 문자열의 길이만큼 loop
# 29번-30번 줄 : 만약 입력값이 같다면 0을 리턴 range 함수가 len(A)의 길이 즉, loop가 같다면 0
# 32번 : 파이썬 슬라이스 기능을 활용하여 밀어낸다 => 즉, 1이 되는 문자열을 찾는다.
# 34번 : 아닌 경우 -1 리턴해준다.